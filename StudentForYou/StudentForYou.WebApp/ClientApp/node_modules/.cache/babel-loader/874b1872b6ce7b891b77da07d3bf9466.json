{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport requiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\nimport uncontrollable from 'uncontrollable';\nimport Nav from './Nav';\nimport NavItem from './NavItem';\nimport UncontrolledTabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport { bsClass as setBsClass } from './utils/bootstrapUtils';\nimport ValidComponentChildren from './utils/ValidComponentChildren';\nvar TabContainer = UncontrolledTabContainer.ControlledComponent;\nvar propTypes = {\n  /**\n   * Mark the Tab with a matching `eventKey` as active.\n   *\n   * @controllable onSelect\n   */\n  activeKey: React.PropTypes.any,\n\n  /**\n   * Navigation style\n   */\n  bsStyle: React.PropTypes.oneOf(['tabs', 'pills']),\n  animation: React.PropTypes.bool,\n  id: requiredForA11y(React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.number])),\n\n  /**\n   * Callback fired when a Tab is selected.\n   *\n   * ```js\n   * function (\n   * \tAny eventKey,\n   * \tSyntheticEvent event?\n   * )\n   * ```\n   *\n   * @controllable activeKey\n   */\n  onSelect: React.PropTypes.func,\n\n  /**\n   * Unmount tabs (remove it from the DOM) when it is no longer visible\n   */\n  unmountOnExit: React.PropTypes.bool\n};\nvar defaultProps = {\n  bsStyle: 'tabs',\n  animation: true,\n  unmountOnExit: false\n};\n\nfunction getDefaultActiveKey(children) {\n  var defaultActiveKey = void 0;\n  ValidComponentChildren.forEach(children, function (child) {\n    if (defaultActiveKey == null) {\n      defaultActiveKey = child.props.eventKey;\n    }\n  });\n  return defaultActiveKey;\n}\n\nvar Tabs = function (_React$Component) {\n  _inherits(Tabs, _React$Component);\n\n  function Tabs() {\n    _classCallCheck(this, Tabs);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  Tabs.prototype.renderTab = function renderTab(child) {\n    var _child$props = child.props;\n    var title = _child$props.title;\n    var eventKey = _child$props.eventKey;\n    var disabled = _child$props.disabled;\n    var tabClassName = _child$props.tabClassName;\n\n    if (title == null) {\n      return null;\n    }\n\n    return React.createElement(NavItem, {\n      eventKey: eventKey,\n      disabled: disabled,\n      className: tabClassName\n    }, title);\n  };\n\n  Tabs.prototype.render = function render() {\n    var _props = this.props;\n    var id = _props.id;\n    var onSelect = _props.onSelect;\n    var animation = _props.animation;\n    var unmountOnExit = _props.unmountOnExit;\n    var bsClass = _props.bsClass;\n    var className = _props.className;\n    var style = _props.style;\n    var children = _props.children;\n    var _props$activeKey = _props.activeKey;\n    var activeKey = _props$activeKey === undefined ? getDefaultActiveKey(children) : _props$activeKey;\n\n    var props = _objectWithoutProperties(_props, ['id', 'onSelect', 'animation', 'unmountOnExit', 'bsClass', 'className', 'style', 'children', 'activeKey']);\n\n    return React.createElement(TabContainer, {\n      id: id,\n      activeKey: activeKey,\n      onSelect: onSelect,\n      className: className,\n      style: style\n    }, React.createElement('div', null, React.createElement(Nav, _extends({}, props, {\n      role: 'tablist'\n    }), ValidComponentChildren.map(children, this.renderTab)), React.createElement(TabContent, {\n      bsClass: bsClass,\n      animation: animation,\n      unmountOnExit: unmountOnExit\n    }, children)));\n  };\n\n  return Tabs;\n}(React.Component);\n\nTabs.propTypes = propTypes;\nTabs.defaultProps = defaultProps;\nsetBsClass('tab', Tabs);\nexport default uncontrollable(Tabs, {\n  activeKey: 'onSelect'\n});","map":null,"metadata":{},"sourceType":"module"}