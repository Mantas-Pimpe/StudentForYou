{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport classNames from 'classnames';\nimport React from 'react';\nimport elementType from 'react-prop-types/lib/elementType';\nimport SafeAnchor from './SafeAnchor';\nimport createChainedFunction from './utils/createChainedFunction'; // TODO: This should be `<Pagination.Item>`.\n// TODO: This should use `componentClass` like other components.\n\nvar propTypes = {\n  componentClass: elementType,\n  className: React.PropTypes.string,\n  eventKey: React.PropTypes.any,\n  onSelect: React.PropTypes.func,\n  disabled: React.PropTypes.bool,\n  active: React.PropTypes.bool,\n  onClick: React.PropTypes.func\n};\nvar defaultProps = {\n  componentClass: SafeAnchor,\n  active: false,\n  disabled: false\n};\n\nvar PaginationButton = function (_React$Component) {\n  _inherits(PaginationButton, _React$Component);\n\n  function PaginationButton(props, context) {\n    _classCallCheck(this, PaginationButton);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n    _this.handleClick = _this.handleClick.bind(_this);\n    return _this;\n  }\n\n  PaginationButton.prototype.handleClick = function handleClick(event) {\n    var _props = this.props;\n    var disabled = _props.disabled;\n    var onSelect = _props.onSelect;\n    var eventKey = _props.eventKey;\n\n    if (disabled) {\n      return;\n    }\n\n    if (onSelect) {\n      onSelect(eventKey, event);\n    }\n  };\n\n  PaginationButton.prototype.render = function render() {\n    var _props2 = this.props;\n    var Component = _props2.componentClass;\n    var active = _props2.active;\n    var disabled = _props2.disabled;\n    var onClick = _props2.onClick;\n    var className = _props2.className;\n    var style = _props2.style;\n\n    var props = _objectWithoutProperties(_props2, ['componentClass', 'active', 'disabled', 'onClick', 'className', 'style']);\n\n    if (Component === SafeAnchor) {\n      // Assume that custom components want `eventKey`.\n      delete props.eventKey;\n    }\n\n    delete props.onSelect;\n    return React.createElement('li', {\n      className: classNames(className, {\n        active: active,\n        disabled: disabled\n      }),\n      style: style\n    }, React.createElement(Component, _extends({}, props, {\n      disabled: disabled,\n      onClick: createChainedFunction(onClick, this.handleClick)\n    })));\n  };\n\n  return PaginationButton;\n}(React.Component);\n\nPaginationButton.propTypes = propTypes;\nPaginationButton.defaultProps = defaultProps;\nexport default PaginationButton;","map":null,"metadata":{},"sourceType":"module"}