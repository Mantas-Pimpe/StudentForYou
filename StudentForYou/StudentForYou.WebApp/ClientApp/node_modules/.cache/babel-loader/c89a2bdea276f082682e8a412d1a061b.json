{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manta\\\\source\\\\repos\\\\StudentForYou\\\\StudentForYou\\\\StudentForYou.WebApp\\\\ClientApp\\\\src\\\\views\\\\examples\\\\Maps.jsx\";\n\n/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\"; // react plugin used to create google maps\n\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\"; // reactstrap components\n\nimport { Card, Container, Row } from \"reactstrap\"; // core components\n\nimport Header from \"components/Headers/Header.jsx\"; // mapTypeId={google.maps.MapTypeId.ROADMAP}\n\nconst MapWrapper = withScriptjs(withGoogleMap(props => React.createElement(GoogleMap, {\n  defaultZoom: 12,\n  defaultCenter: {\n    lat: 40.748817,\n    lng: -73.985428\n  },\n  defaultOptions: {\n    scrollwheel: false,\n    styles: [{\n      featureType: \"administrative\",\n      elementType: \"labels.text.fill\",\n      stylers: [{\n        color: \"#444444\"\n      }]\n    }, {\n      featureType: \"landscape\",\n      elementType: \"all\",\n      stylers: [{\n        color: \"#f2f2f2\"\n      }]\n    }, {\n      featureType: \"poi\",\n      elementType: \"all\",\n      stylers: [{\n        visibility: \"off\"\n      }]\n    }, {\n      featureType: \"road\",\n      elementType: \"all\",\n      stylers: [{\n        saturation: -100\n      }, {\n        lightness: 45\n      }]\n    }, {\n      featureType: \"road.highway\",\n      elementType: \"all\",\n      stylers: [{\n        visibility: \"simplified\"\n      }]\n    }, {\n      featureType: \"road.arterial\",\n      elementType: \"labels.icon\",\n      stylers: [{\n        visibility: \"off\"\n      }]\n    }, {\n      featureType: \"transit\",\n      elementType: \"all\",\n      stylers: [{\n        visibility: \"off\"\n      }]\n    }, {\n      featureType: \"water\",\n      elementType: \"all\",\n      stylers: [{\n        color: \"#5e72e4\"\n      }, {\n        visibility: \"on\"\n      }]\n    }]\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, React.createElement(Marker, {\n  position: {\n    lat: 40.748817,\n    lng: -73.985428\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84\n  },\n  __self: this\n}))));\n\nclass Maps extends React.Component {\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(Container, {\n      className: \"mt--7\",\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"shadow border-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(MapWrapper, {\n      googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=YOUR_KEY_HERE\",\n      loadingElement: React.createElement(\"div\", {\n        style: {\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }),\n      containerElement: React.createElement(\"div\", {\n        style: {\n          height: \"600px\"\n        },\n        className: \"map-canvas\",\n        id: \"map-canvas\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }),\n      mapElement: React.createElement(\"div\", {\n        style: {\n          height: \"100%\",\n          borderRadius: \"inherit\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default Maps;","map":{"version":3,"sources":["C:\\Users\\manta\\source\\repos\\StudentForYou\\StudentForYou\\StudentForYou.WebApp\\ClientApp\\src\\views\\examples\\Maps.jsx"],"names":["React","withScriptjs","withGoogleMap","GoogleMap","Marker","Card","Container","Row","Header","MapWrapper","props","lat","lng","scrollwheel","styles","featureType","elementType","stylers","color","visibility","saturation","lightness","Maps","Component","render","height","borderRadius"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// react plugin used to create google maps\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker\n} from \"react-google-maps\";\n\n// reactstrap components\nimport { Card, Container, Row } from \"reactstrap\";\n\n// core components\nimport Header from \"components/Headers/Header.jsx\";\n// mapTypeId={google.maps.MapTypeId.ROADMAP}\nconst MapWrapper = withScriptjs(\n  withGoogleMap(props => (\n    <GoogleMap\n      defaultZoom={12}\n      defaultCenter={{ lat: 40.748817, lng: -73.985428 }}\n      defaultOptions={{\n        scrollwheel: false,\n        styles: [\n          {\n            featureType: \"administrative\",\n            elementType: \"labels.text.fill\",\n            stylers: [{ color: \"#444444\" }]\n          },\n          {\n            featureType: \"landscape\",\n            elementType: \"all\",\n            stylers: [{ color: \"#f2f2f2\" }]\n          },\n          {\n            featureType: \"poi\",\n            elementType: \"all\",\n            stylers: [{ visibility: \"off\" }]\n          },\n          {\n            featureType: \"road\",\n            elementType: \"all\",\n            stylers: [{ saturation: -100 }, { lightness: 45 }]\n          },\n          {\n            featureType: \"road.highway\",\n            elementType: \"all\",\n            stylers: [{ visibility: \"simplified\" }]\n          },\n          {\n            featureType: \"road.arterial\",\n            elementType: \"labels.icon\",\n            stylers: [{ visibility: \"off\" }]\n          },\n          {\n            featureType: \"transit\",\n            elementType: \"all\",\n            stylers: [{ visibility: \"off\" }]\n          },\n          {\n            featureType: \"water\",\n            elementType: \"all\",\n            stylers: [{ color: \"#5e72e4\" }, { visibility: \"on\" }]\n          }\n        ]\n      }}\n    >\n      <Marker position={{ lat: 40.748817, lng: -73.985428 }} />\n    </GoogleMap>\n  ))\n);\n\nclass Maps extends React.Component {\n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <div className=\"col\">\n              <Card className=\"shadow border-0\">\n                <MapWrapper\n                  googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=YOUR_KEY_HERE\"\n                  loadingElement={<div style={{ height: `100%` }} />}\n                  containerElement={\n                    <div\n                      style={{ height: `600px` }}\n                      className=\"map-canvas\"\n                      id=\"map-canvas\"\n                    />\n                  }\n                  mapElement={\n                    <div style={{ height: `100%`, borderRadius: \"inherit\" }} />\n                  }\n                />\n              </Card>\n            </div>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Maps;\n"]},"metadata":{},"sourceType":"module"}