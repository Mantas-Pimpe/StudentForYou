{"ast":null,"code":"import _Object$values from 'babel-runtime/core-js/object/values';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport classNames from 'classnames';\nimport React from 'react';\nimport { bsClass, bsStyles, getClassSet, prefix, splitBsProps } from './utils/bootstrapUtils';\nimport { State } from './utils/StyleConfig';\nvar propTypes = {\n  onDismiss: React.PropTypes.func,\n  closeLabel: React.PropTypes.string\n};\nvar defaultProps = {\n  closeLabel: 'Close alert'\n};\n\nvar Alert = function (_React$Component) {\n  _inherits(Alert, _React$Component);\n\n  function Alert() {\n    _classCallCheck(this, Alert);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  Alert.prototype.renderDismissButton = function renderDismissButton(onDismiss) {\n    return React.createElement('button', {\n      type: 'button',\n      className: 'close',\n      onClick: onDismiss,\n      'aria-hidden': 'true',\n      tabIndex: '-1'\n    }, React.createElement('span', null, 'Ã—'));\n  };\n\n  Alert.prototype.renderSrOnlyDismissButton = function renderSrOnlyDismissButton(onDismiss, closeLabel) {\n    return React.createElement('button', {\n      type: 'button',\n      className: 'close sr-only',\n      onClick: onDismiss\n    }, closeLabel);\n  };\n\n  Alert.prototype.render = function render() {\n    var _extends2;\n\n    var _props = this.props;\n    var onDismiss = _props.onDismiss;\n    var closeLabel = _props.closeLabel;\n    var className = _props.className;\n    var children = _props.children;\n\n    var props = _objectWithoutProperties(_props, ['onDismiss', 'closeLabel', 'className', 'children']);\n\n    var _splitBsProps = splitBsProps(props);\n\n    var bsProps = _splitBsProps[0];\n    var elementProps = _splitBsProps[1];\n    var dismissable = !!onDismiss;\n\n    var classes = _extends({}, getClassSet(bsProps), (_extends2 = {}, _extends2[prefix(bsProps, 'dismissable')] = dismissable, _extends2));\n\n    return React.createElement('div', _extends({}, elementProps, {\n      role: 'alert',\n      className: classNames(className, classes)\n    }), dismissable && this.renderDismissButton(onDismiss), children, dismissable && this.renderSrOnlyDismissButton(onDismiss, closeLabel));\n  };\n\n  return Alert;\n}(React.Component);\n\nAlert.propTypes = propTypes;\nAlert.defaultProps = defaultProps;\nexport default bsStyles(_Object$values(State), State.INFO, bsClass('alert', Alert));","map":null,"metadata":{},"sourceType":"module"}